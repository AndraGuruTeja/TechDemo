{"ast":null,"code":"// import axios from 'axios';\n\n// const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// export const getWeather = async (city) => {\n//   try {\n//     const response = await axios.get(`${API_URL}/weather/${city}`);\n//     return response.data;\n//   } catch (error) {\n//     throw new Error(error.response?.data?.detail || 'Failed to fetch weather');\n//   }\n// };import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nexport const getWeather = async city => {\n  try {\n    const response = await axios.get(`${API_URL}/weather/${city}`);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Failed to fetch weather');\n  }\n};\nexport const getWeatherHistory = async (city, days = 7) => {\n  try {\n    const response = await axios.get(`${API_URL}/weather/history/${city}?days=${days}`);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to fetch historical weather data');\n  }\n};\nexport const getWeatherTrends = async (city, days = 7) => {\n  try {\n    const response = await axios.get(`${API_URL}/weather/trends/${city}?days=${days}`);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Failed to fetch weather trends');\n  }\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","getWeather","city","response","axios","get","data","error","_error$response","_error$response$data","Error","detail","getWeatherHistory","days","_error$response2","_error$response2$data","getWeatherTrends","_error$response3","_error$response3$data"],"sources":["/home/sigmoid/Videos/weather-monitoring-app/frontend/src/api.js"],"sourcesContent":["// import axios from 'axios';\n\n// const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// export const getWeather = async (city) => {\n//   try {\n//     const response = await axios.get(`${API_URL}/weather/${city}`);\n//     return response.data;\n//   } catch (error) {\n//     throw new Error(error.response?.data?.detail || 'Failed to fetch weather');\n//   }\n// };import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nexport const getWeather = async (city) => {\n  try {\n    const response = await axios.get(`${API_URL}/weather/${city}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Failed to fetch weather');\n  }\n};\n\nexport const getWeatherHistory = async (city, days = 7) => {\n  try {\n    const response = await axios.get(`${API_URL}/weather/history/${city}?days=${days}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Failed to fetch historical weather data');\n  }\n};\n\nexport const getWeatherTrends = async (city, days = 7) => {\n  try {\n    const response = await axios.get(`${API_URL}/weather/trends/${city}?days=${days}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Failed to fetch weather trends');\n  }\n};\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,GAAGR,OAAO,YAAYK,IAAI,EAAE,CAAC;IAC9D,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBE,MAAM,KAAI,yBAAyB,CAAC;EAC5E;AACF,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAOV,IAAI,EAAEW,IAAI,GAAG,CAAC,KAAK;EACzD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,GAAGR,OAAO,oBAAoBK,IAAI,SAASW,IAAI,EAAE,CAAC;IACnF,OAAOV,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAO,gBAAA,EAAAC,qBAAA;IACd,MAAM,IAAIL,KAAK,CAAC,EAAAI,gBAAA,GAAAP,KAAK,CAACJ,QAAQ,cAAAW,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBR,IAAI,cAAAS,qBAAA,uBAApBA,qBAAA,CAAsBJ,MAAM,KAAI,yCAAyC,CAAC;EAC5F;AACF,CAAC;AAED,OAAO,MAAMK,gBAAgB,GAAG,MAAAA,CAAOd,IAAI,EAAEW,IAAI,GAAG,CAAC,KAAK;EACxD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,GAAGR,OAAO,mBAAmBK,IAAI,SAASW,IAAI,EAAE,CAAC;IAClF,OAAOV,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAU,gBAAA,EAAAC,qBAAA;IACd,MAAM,IAAIR,KAAK,CAAC,EAAAO,gBAAA,GAAAV,KAAK,CAACJ,QAAQ,cAAAc,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBX,IAAI,cAAAY,qBAAA,uBAApBA,qBAAA,CAAsBP,MAAM,KAAI,gCAAgC,CAAC;EACnF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}